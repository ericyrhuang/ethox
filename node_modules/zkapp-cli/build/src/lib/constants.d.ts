export default Constants;
export type UiType = "next" | "svelte" | "nuxt" | "empty" | "none";
export type ExampleType = "sudoku" | "tictactoe";
export type NetworkId = "testnet" | "mainnet";
export type LightnetMode = "single-node" | "multi-node";
export type LightnetType = "fast" | "real";
export type LightnetProofLevel = "none" | "full";
export type LightnetMinaBranch = "master" | "compatible" | "develop";
export type LightnetMinaLogLevel = "Spam" | "Trace" | "Debug" | "Info" | "Warn" | "Error" | "Fatal";
/**
 * @typedef {'next' | 'svelte' | 'nuxt' | 'empty' | 'none'} UiType
 * @typedef {'sudoku' | 'tictactoe'} ExampleType
 * @typedef {'testnet' | 'mainnet'} NetworkId
 * @typedef {'single-node' | 'multi-node'} LightnetMode
 * @typedef {'fast' | 'real'} LightnetType
 * @typedef {'none' | 'full'} LightnetProofLevel
 * @typedef {'master' | 'compatible' | 'develop'} LightnetMinaBranch
 * @typedef {'Spam' | 'Trace' | 'Debug' | 'Info' | 'Warn' | 'Error' | 'Fatal'} LightnetMinaLogLevel
 *
 * @type {{ uiTypes: UiType[], exampleTypes: ExampleType[], feePayerCacheDir: string, networkIds: NetworkId[], lightnetWorkDir: string, lightnetModes: LightnetMode[], lightnetTypes: LightnetType[], lightnetProofLevels: LightnetProofLevel[], lightnetMinaBranches: LightnetMinaBranch[], lightnetProcessToLogFileMapping: Map<string, string>, lightnetMinaProcessesLogLevels: LightnetMinaLogLevel[], lightnetMinaDaemonGraphQlEndpoint: string, lightnetAccountManagerEndpoint: string, lightnetArchiveNodeApiEndpoint: string }}
 */
declare const Constants: {
    uiTypes: UiType[];
    exampleTypes: ExampleType[];
    feePayerCacheDir: string;
    networkIds: NetworkId[];
    lightnetWorkDir: string;
    lightnetModes: LightnetMode[];
    lightnetTypes: LightnetType[];
    lightnetProofLevels: LightnetProofLevel[];
    lightnetMinaBranches: LightnetMinaBranch[];
    lightnetProcessToLogFileMapping: Map<string, string>;
    lightnetMinaProcessesLogLevels: LightnetMinaLogLevel[];
    lightnetMinaDaemonGraphQlEndpoint: string;
    lightnetAccountManagerEndpoint: string;
    lightnetArchiveNodeApiEndpoint: string;
};
